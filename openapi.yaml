openapi: 3.0.0
info:
  version: 1.0.0
  title: Student API
  description: API for Student Management Application
servers: 
  - url: http://localhost:5000/
  - url: http://localhost:8000/
  
paths:
  /students :
    description: Operation to fetch all the Students
    get:
      description: Fetch details of all the Students
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: 
                    StudentID:
                      type: integer
                      example: 3
                    StudentName:
                      type: string
                      example: "Ram"
                    Phone_Number:
                      type: string
                      example: "987654321"
                    City:
                      type: string
                      example: "Delhi"
        400:
          $ref: "#/components/responses/400Error"
  
  /addStudent :
    description: Add a new Student
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/studentSchema"
              
      responses:
        200:
          description: Successfully created a new Student
        400:
          $ref: "#/components/responses/400Error"
  
  /removeStudent{ID}:
    description: Operation to remove Student
    delete:
      description: Remove Student with particular ID
      parameters: 
        - name: ID
          in: path
          required: true
          schema:
            type: integer
            example: 3
      
      responses:
        200: 
          description: Successfully removed the Student 
        
        400:
          $ref: "#/components/responses/400Error"
              
  /updateStudent{ID}:
    description: Operation to update Student Detail
    patch:
      description: Update details of specific student
      parameters: 
        - name: ID
          in: path
          required: true
          schema:
            type: integer
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/studentSchema"
      
      responses:
        200:
          description: Successfully updated the student details
        
        400:
          $ref: "#/components/responses/400Error"
      
    
    
components:
  schemas:
    studentSchema:
      type: object
      properties:
        StudentName:
          type: string
          example: "Ram"
        Phone_Number:
          type: string
          example: "987654321"
        City:
          type: string
          example: "Delhi" 
  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string
                example: "Some Error message"
      
